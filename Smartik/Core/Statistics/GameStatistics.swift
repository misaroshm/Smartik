//
//  GameStatistics.swift
//  Smartik
//
//  Created by Mariia Misarosh on 01.06.2025.
//


import Foundation

struct GameStatistics: Identifiable {
    var id: String { gameName }
    let gameName: String
    let gamesPlayed: Int
    let correctAnswers: Int
    let totalQuestions: Int
    let bestScore: Int
    
    var averageScore: Double {
        totalQuestions > 0 ? min((Double(correctAnswers) / Double(totalQuestions)) * 100, 100.0) : 0.0
    }
    
    var displayName: String {
        GameName(rawValue: gameName)?.displayName ?? gameName
    }
    
    var emoji: String {
        GameName(rawValue: gameName)?.emoji ?? "üéØ"
    }
}


enum GameName: String, CaseIterable {
    case memoryGame = "memoryGame"
    case oddOneOut = "oddOneOut"
    case colorMatch = "colorMatch"
    case mathGame = "mathGame"
    case makeWord = "makeWord"
    case guessAnimal = "guessAnimal"
    case matchingNumbers = "matchingNumbers"
    
    var displayName: String {
        switch self {
        case .memoryGame: return "–ü–∞–º'—è—Ç—å"
        case .oddOneOut: return "–•—Ç–æ –∑–∞–π–≤–∏–π"
        case .colorMatch: return "–ö–æ–ª—å–æ—Ä–∏"
        case .mathGame: return "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"
        case .makeWord: return "–°–∫–ª–∞–¥–∏ —Å–ª–æ–≤–æ"
        case .guessAnimal: return "–í–≥–∞–¥–∞–π —Ç–≤–∞—Ä–∏–Ω—É"
        case .matchingNumbers: return "–ü–æ—Ä–∞—Ö—É–π —á–∏—Å–ª–∞"
        }
    }
    
    var emoji: String {
        switch self {
        case .memoryGame: return "üß†"
        case .oddOneOut: return "üßê"
        case .colorMatch: return "üé®"
        case .mathGame: return "‚ûï"
        case .makeWord: return "üî§"
        case .guessAnimal: return "üêæ"
        case .matchingNumbers: return "üî¢"
        }
    }
}

